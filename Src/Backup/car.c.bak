#include "car.h"

void ServoRotate(SERVO *servo, float angle)
{
  
}


void MotorSignalPower(MOTOR_SIGNAL *motor_signal, float power)
{
  assert_param(motor_signal != NULL);

  uint32_t arr = __HAL_TIM_GetAutoreload(motor_signal->htim);

  assert_param(power >= 0);

  uint32_t ccr = arr * power;

  __HAL_TIM_SetCompare(motor_signal->htim, motor_signal->channel, ccr);
}

void MotorPower(MOTOR *motor, float power)
{
  assert_param(motor != NULL);

  if (power >= 0)
  {
    MotorSignalPower(&motor->signal_a, power);
  } else if (power < 0)
  {
    MotorSignalPower(&motor->signal_b, power * -1);
  } else {
    MotorSignalPower(&motor->signal_a, power);
    MotorSignalPower(&motor->signal_b, power);
  }
}

void DriverPower(DRIVER *driver, float angle, float power_a, float power_b)
{
  assert_param(driver != NULL);
  ServoRotate(&driver->servo, angle);
  
  MotorPower(&driver->motor_a, power_a);
  MotorPower(&driver->motor_b, power_b);
}

